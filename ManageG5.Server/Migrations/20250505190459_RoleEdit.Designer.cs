// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManageG5.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250505190459_RoleEdit")]
    partial class RoleEdit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManageG5.Server.Models.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000001",
                            CreatedAt = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Company performance 2024",
                            Name = "Annual Report 2024"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000002",
                            CreatedAt = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Company policies",
                            Name = "Employee Handbook"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000003",
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "2024 Q1 goals",
                            Name = "Marketing Strategy"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000004",
                            CreatedAt = new DateTime(2024, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Next year's projections",
                            Name = "Budget Forecast"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000005",
                            CreatedAt = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Infrastructure rules",
                            Name = "IT Guidelines"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000006",
                            CreatedAt = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Company-wide security practices",
                            Name = "Security Policy"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000007",
                            CreatedAt = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Recruitment targets",
                            Name = "Hiring Plan"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000008",
                            CreatedAt = new DateTime(2024, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Board meetings notes",
                            Name = "Meeting Minutes"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000009",
                            CreatedAt = new DateTime(2024, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "New hire onboarding",
                            Name = "Training Manual"
                        },
                        new
                        {
                            Id = "10000000-0000-0000-0000-000000000010",
                            CreatedAt = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Corporate Social Responsibility update",
                            Name = "CSR Report"
                        });
                });

            modelBuilder.Entity("ManageG5.Server.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Name = "read",
                            Roles = "[]"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Name = "write",
                            Roles = "[]"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Name = "delete",
                            Roles = "[]"
                        });
                });

            modelBuilder.Entity("ManageG5.Server.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Description = "Has full access",
                            Name = "Super Admin"
                        },
                        new
                        {
                            Id = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Description = "Admin privileges",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Description = "HR admin privileges",
                            Name = "HR Admin"
                        },
                        new
                        {
                            Id = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Description = "Standard employee",
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("ManageG5.Server.Models.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            PermissionId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            RoleId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            PermissionId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            RoleId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            PermissionId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            PermissionId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            PermissionId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            PermissionId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            RoleId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            PermissionId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            RoleId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            PermissionId = new Guid("11111111-1111-1111-1111-111111111111")
                        });
                });

            modelBuilder.Entity("ManageG5.Server.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000001",
                            CreatedAt = new DateTime(2015, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david_wagner@example.com",
                            Name = "David Wagner",
                            PhoneNumber = "0999999999",
                            RoleId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            UpdatedAt = new DateTime(2015, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "davidWagnerGG"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000002",
                            CreatedAt = new DateTime(2015, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ina_hogan@example.com",
                            Name = "Ina Hogan",
                            PhoneNumber = "0888888888",
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            UpdatedAt = new DateTime(2015, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "inaHogan007"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000003",
                            CreatedAt = new DateTime(2020, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john@example.com",
                            Name = "John Smith",
                            PhoneNumber = "0911111111",
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            UpdatedAt = new DateTime(2020, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "johnnyS"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000004",
                            CreatedAt = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara@example.com",
                            Name = "Sara Lee",
                            PhoneNumber = "0922222222",
                            RoleId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            UpdatedAt = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "saraLee"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000005",
                            CreatedAt = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bruce@example.com",
                            Name = "Bruce Wayne",
                            PhoneNumber = "0933333333",
                            RoleId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            UpdatedAt = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "batman"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000006",
                            CreatedAt = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "clark@example.com",
                            Name = "Clark Kent",
                            PhoneNumber = "0944444444",
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            UpdatedAt = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "superman"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000007",
                            CreatedAt = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "peter@example.com",
                            Name = "Peter Parker",
                            PhoneNumber = "0955555555",
                            RoleId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            UpdatedAt = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "spidey"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000008",
                            CreatedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tony@example.com",
                            Name = "Tony Stark",
                            PhoneNumber = "0966666666",
                            RoleId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            UpdatedAt = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "ironman"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000009",
                            CreatedAt = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diana@example.com",
                            Name = "Diana Prince",
                            PhoneNumber = "0977777777",
                            RoleId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            UpdatedAt = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "wonderwoman"
                        },
                        new
                        {
                            Id = "u00000000-0000-0000-0000-000000000010",
                            CreatedAt = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "steve@example.com",
                            Name = "Steve Rogers",
                            PhoneNumber = "0988888888",
                            RoleId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            UpdatedAt = new DateTime(2022, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "cap"
                        });
                });

            modelBuilder.Entity("ManageG5.Server.Models.Permission", b =>
                {
                    b.HasOne("ManageG5.Server.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ManageG5.Server.Models.RolePermission", b =>
                {
                    b.HasOne("ManageG5.Server.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManageG5.Server.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ManageG5.Server.Models.User", b =>
                {
                    b.HasOne("ManageG5.Server.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ManageG5.Server.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("ManageG5.Server.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
